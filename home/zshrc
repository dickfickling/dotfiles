# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt rmstarsilent
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_ignore_space
#setopt share_history
setopt autocd
setopt PROMPT_SUBST
setopt RM_STAR_WAIT
#setopt autopushd
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/dick/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# key bindings
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[3~" delete-char
bindkey "\e[2~" quoted-insert
bindkey "\e[5C" forward-word
bindkey "\eOc" emacs-forward-word
bindkey "\e[5D" backward-word
bindkey "\eOd" emacs-backward-word
bindkey "\ee[C" forward-word
bindkey "\ee[D" backward-word
bindkey "^H" backward-delete-word
bindkey '^R' history-incremental-search-backward
# for rxvt
bindkey "\e[8~" end-of-line
bindkey "\e[7~" beginning-of-line
# for non RH/Debian xterm, can't hurt for RH/DEbian xterm
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
# for freebsd console
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line
# completion in the middle of a line
bindkey '^i' expand-or-complete-prefix
# stupid debian
bindkey -M viins "\e[A" up-line-or-history
bindkey -M viins "\e[B" down-line-or-history
bindkey -M viins "\eOA" up-line-or-history
bindkey -M viins "\eOB" down-line-or-history

# HOMEBREW
export HOMEBREW_PREFIX="/opt/homebrew";
export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
export HOMEBREW_REPOSITORY="/opt/homebrew";
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
export PATH="/opt/homebrew/opt/ruby/bin:/opt/homebrew/lib/ruby/gems/3.1.0/bin:$PATH"
export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";

export PATH=$HOME/.yarn/bin:$PATH
export PATH=./node_modules/.bin:$PATH
export PATH=$PATH:$HOME/bin

# PIPX
export PATH=$PATH:$HOME/.local/bin


export LC_ALL=en_US.UTF-8
alias ls='gls --color=auto'
alias sed='gsed'
eval $(gdircolors -b ~/.dir_colors)

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
alias gd='git diff'
alias gs='git status'
alias gcom='git commit -m'
alias gcam='git commit --amend'
alias gp='git push'
alias gl='git pull'
alias gco='git checkout'
alias ss='source ~/.zshrc'
alias vim=nvim
alias code=nvim
export EDITOR=nvim
export DISPLAY=:0
autoload -U colors && colors
PROMPT='%B%F{red}%m%F{white}:%F{blue}%2d%b%F{green}$(parse_git_branch)%f â€¢ '
RPROMPT='%F{white}%*%f'

function h2d() {
    printf "%d\n" "0x$1"
}
function d2h() {
    printf "%x\n" "$1"
}

alias curl='curl -w "\n"'
alias ta='tmux attach'
alias watch='watch --interval=.5 '
alias md='mkdir'

export TERM=rxvt
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
stty start undef stop undef

. $HOME/.z.sh/z.sh

function secret() {
  echo -n "$1" | base64 | tr -d '\n' | pbcopy
}

function unsecret() {
  echo -n "$1" | base64 -D
}

function cuid() {
  node -e "console.log(require('cuid')())" | tr -d '\n' | pbcopy
}

function rm-deployments() {
  # list the deployments
  # pick out the ones where the date is starts with yyyy-mm-dd where dd is 11 days ago, and then remove the last character
  # e.g. if it's 2022-05-20, then we want 2022-05-09 => 2022-05-0, any deployment made in the first 9 days of May
  # then remove them
  appcenter codepush deployment list -a groundswell-giving/GroundSwell-$1 -k -s | grep $(date -I -v -11d | tr -d '\n' | sed "s/\w$//g") | awk '{ print $2 }' | xargs -n 1 appcenter codepush deployment remove -a groundswell-giving/GroundSwell-$1 --quiet
}

function upload() {
  curl -X POST -H "Content-Type: multipart/form-data" -H "Authorization: MEEP_MORP" -F "files=@$1" https://api.groundswell.io/v1/upload | jq '.uploadedUrls'
}

# usage rm-ios
alias rm-ios="rm-deployments iOS-1"
alias rm-android="rm-deployments Android"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

alias pr="git push origin --no-verify && gh pr create --body '$1' -f; gh pr view --web"
alias tq="npm run test-quick"
alias t="npm run test"
alias lg="LOG_REQUESTS=true"
alias v4="uuid v4 | tr -d '\n' | pbcopy"
alias run="node -r @swc-node/register"
alias pbackup="osxphotos export /Volumes/Extreme\ Pro/photos --directory \"{created.year}.{created.mm}\" --download-missing --update --verbose | tee -a /Volumes/Extreme\ Pro/photos.log"
alias lightdark="osascript -e 'tell app \"System Events\" to tell appearance preferences to set dark mode to not dark mode'"

export KUBE_EDITOR='code --wait'
# bun completions
[ -s "/Users/dick/.bun/_bun" ] && source "/Users/dick/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# android
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools
